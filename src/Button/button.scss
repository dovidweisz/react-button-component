@import "colors";

$global-weight-bold: 600;
$button-radius: 3px;
$button-margin: 0;

$bh-button-height: 2.5em !default;
$bh-button-default-weight: $global-weight-bold !default;

@mixin sync-line-height($container-height) {
	height: $container-height;
	line-height: $container-height;
}

$bh-button-colors: (
	primary: $hawaii $white #065879,
	secondary: $blue $white #103552,
	tertiary: $water #1a5888 #82888e,
);
$bh-default-button-color: primary !default;

@mixin bh-button {
	@include bh-button-base;
	@include sync-line-height($bh-button-height);
	padding: 0 2em;
	font-weight: $bh-button-default-weight;
	border: 1px solid;
}
@mixin bh-button-base {
	display: inline-block;
	text-align: center;
	cursor: pointer;
	-webkit-appearance: none; // sass-lint:disable-line no-vendor-prefixes
	vertical-align: middle;
	border-radius: $button-radius;
	margin: $button-margin;
}

@mixin bh-style-button($background-color, $color, $hover-color) {
	background-color: $background-color;
	color: $color;
	border-color: $background-color;
	&:hover {
		background-color: $hover-color;
		border-color: $hover-color;
		@if lightness($color) - lightness($hover-color) < 25% {
			color: $white;
		}
	}
}

.button {
	@include bh-button;

	// width modifiers
	&.wide {
		padding: 0 3em;
	}

	&.xWide {
		padding: 0 4em;
	}

	&.fitWidth {
		display: block;
		width: 100%;
		margin-left: 0;
		margin-right: 0;
		padding: 0;
	}

	// shrinks height and width
	&.small {
		@include sync-line-height(2em);
		padding: 0 1em;
	}

	// expands height only
	&.large {
		padding: 0 4em;
		@include sync-line-height(3em);
	}
	$-default-color-list: map_get($bh-button-colors, $bh-default-button-color);
	@include bh-style-button($-default-color-list...);
	@each $name, $color in $bh-button-colors {
		&.#{$name} {
			@if ($name != $bh-default-button-color) {
				@include bh-style-button($color...);
			}
		}
	}

	&.active,
	&.active:hover,
	&:active,
	&:active:hover {
		background-color: transparent;
		border-color: $blue;
		color: $blue;
	}

	&.activeAlt {
		background-color: $sruli;
		border-color: $sruli;
	}

	&.disabled,
	&[disabled],
	&.disabled:hover,
	&[disabled]:hover {
		background-color: $vog;
		color: $whale;
		border-color: $vog;
	}

	&.ghost {
		background-color: transparent;

		&:hover {
			background-color: $cesar;
		}

		&.disabled,
		&[disabled],
		&.disabled:hover,
		&[disabled]:hover {
			background-color: $white;
			color: $whale;
			border: 1px solid $vog;
		}
	}

	&.pinky {
		color: $midnight;
		border-color: $whale;

		&.active,
		&.active:hover,
		&:active,
		&:active:hover {
			background-color: rgba($sruli, 0.3);
			border: 2px solid $sruli;
		}

		&:hover {
			background-color: $cesar;
			border: 2px solid $sruli;
			color: $midnight;
		}
	}

	&.blinky {
		color: $blue;
		border-color: $blue;

		&.active,
		&.active:hover,
		&:active,
		&:active:hover {
			background-color: rgba($blue, 0.3);
			border: 1px solid rgba($blue, 0.3);
			color: $midnight;
		}

		&:hover {
			background-color: $cesar;
			border: 2px solid #0f3451;
		}
	}
}
